---
title: "Taller 1"
format: html
author: Mat√≠as Montero
date: 25-07-2024
---

![](images/logo-ie-ciae.gif){fig-align="right" width="200"}

# Introducci√≥n a R üë®üèΩ‚Äçüíªüìà

Hola, ¬°bienvenido a R! R es un lenguaje de programaci√≥n de c√≥digo abierto con una apasionada comunidad global y utilizado en diversos campos disciplinares. Ha sido dise√±ado espec√≠ficamente para el an√°lisis estad√≠stico y la visualizaci√≥n de datos, pero es ampliamente flexible y sus extensiones ha dado forma a la creaci√≥n de sitios web, aplicaciones, e incluso el documento que estas leyendo ahora mismo.

De ahora en adelante emplearemos RStudio, que es la interfaz que nos permite utilizar R de una forma algo m√°s amigable. Digo "m√°s amigable" porque en realidad, aunque en un principio lo percibas algo cr√≠ptico esto de analizar datos usando c√≥digo, en realidad ver√°s que en estas gu√≠as de paso a paso te abrir√°n las puertas para descubrir este (nuevo) universo con mucha facilidad.

Te invito a que crees un gui√≥n (R Script)üìã en RStudio dirigi√©ndote en la esquina superior izquierda de la pantalla.

![](gif1.gif)

Como podr√°s haber notado, la interfaz de RStudio est√° organizada en varios paneles, cada uno con un prop√≥sito:

1.  **Panel de Script (arriba a la izquierda):** Aqu√≠ es donde escribes y editas tu c√≥digo R. Puedes guardar tus scripts como archivos .R para usarlos m√°s tarde.

2.  **Panel de Consola (abajo a la izquierda):** Muestra los resultados de la ejecuci√≥n de tu c√≥digo, mensajes de error y advertencias. Tambi√©n, puedes escribir comandos directamente en la consola.

3.  **Panel de Entorno/Historia (arriba a la derecha):**

    -   **Entorno:** Muestra las variables, funciones y objetos de datos que has creado en tu sesi√≥n actual de R.

    -   **Historia:** Registra los comandos que has ejecutado anteriormente.

4.  **Panel de Archivos/Gr√°ficos/Ayuda/Visualizador (abajo a la derecha):**

    -   **Archivos:** Explora los archivos y directorios de tu proyecto.

    -   **Gr√°ficos:** Muestra los gr√°ficos que creas en R.

    -   **Ayuda:** Accede a la documentaci√≥n de R y a los archivos de ayuda de los paquetes instalados.

    -   **Visualizador:** Examina objetos de datos como tablas y marcos de datos en un formato m√°s f√°cil de leer.

5.  **Barra de herramientas:** Contiene botones para ejecutar c√≥digo, crear nuevos archivos y acceder a otras opciones.

6.  **Barra de estado:** Muestra informaci√≥n sobre la sesi√≥n actual de R.

::: callout-note
La interfaz de RStudio es altamente personalizable, permiti√©ndote ordenar los paneles de la manera que prefieras y ajustar la apariencia del entorno para adaptarlo a tu gusto. ¬°S√≠! Puedes ponerlo en color oscuro y colores c√°lidos, en lugar del aspecto blanco predeterminado, y as√≠ no da√±ar tus lindos ojitos üëÄüåü
:::

## Conceptos B√°sicosüîß

Clarifiquemos primero algunos t√©rminos que com√∫nmente decimos en R. Te presento primero los objetos.

::: callout-note
## Si√©ntete libre de copiar y pegar el c√≥digo de este taller en tu propio script. Para ejecutar una l√≠nea de c√≥digo, simplemente sit√∫ate en la l√≠nea y teclea CNTRL + Enter, mientras que en Mac es CMD + Enter.
:::

```{r}
# Aqu√≠ asignamos un valor num√©rico a un objeto "X"
x <- 7
x

# Aqu√≠ creamos un vector de n√∫meros concatenados
NumVar <- c(5, 3, 4)
NumVar

# Los vectores pueden estar concatenados con informaci√≥n de tipo texto o caracteres
CharVar <- c("verde", "amarillo", "verde")
CharVar

# Tambi√©n utilizamos datos de tipo factor para representar datos categ√≥ricos
factores <- factor(c("femenino", "masculino", "masculino", "femenino"))

# Aunque los factores tambi√©n pueden tener una l√≥gica ordinal
factores_ord <- factor(c("bajo", "medio", "alto", "alto"),
                       ordered = TRUE,
                       levels = c("bajo", "medio", "alto"))

factores
factores_ord

# Es posible almacenar valores l√≥gicos que asume solo dos valores posibles
hola <- c("TRUE", "FALSE", "FALSE", "TRUE")
hola

# A veces tendremos datos perdidos representados por NA
vector_con_na <- c(1, 2, NA, 4, 5)
vector_con_na

# R tambi√©n es capaz de manejar informaci√≥n de fechas y tiempo (hora)
fecha <- as.Date("2024-07-24")
fecha

fecha_hora <- as.POSIXct("2024-07-24 12:34:56")
fecha_hora

# Oh mira, con el s√≠mbolo de gato puedes anotar en el c√≥digo para que no olvides lo que haces
```

Como podr√°s haber intuido:

-   Un vector es una secuencia de datos del mismo tipo.
-   El nombre creado al objeto es completamente a nuestra elecci√≥n. Como ves en el ejemplo, puede llamarse `hola` o `CharVar` donde almacenamos la informaci√≥n textual de `verde` y `amarillo`.

En general, trabajar√°s en R usando un `data.frame`, que significa cuadro de datos. Un data.frame es un objeto que almacena un conjunto de vectores que, a su vez, pueden ser vectores que almacenan informaci√≥n de tipo num√©rica, factores, entre otros. Com√∫nmente, los vectores dentro de un `data.frame` se les conoce como variables, las cuales son las columnas que almacenan atributos de la unidad de observaci√≥n de nuestro conjunto de datos representados en las filas. Por ejemplo, las filas pueden ser estudiantes, escuelas, pa√≠ses, mientras que las columna ser√°n sus atributos (e.g., g√©nero).

### Ejercicio 1

En el gui√≥n de R que generaste en tu sesi√≥n de RStudio, crea un vector llamado `edad` que concatene cinco valores num√©ricos. Tambi√©n, crea un vector llamado `nombre` que concatene cinco nombres de personas de tipo caracteres.

::: callout-tip
## Crea los vectores como objetos. Luego, utiliza la funci√≥n `data.frame()` para almacenarlos.
:::

Sobre este `data.frame` podr√°s calcular diferentes estad√≠sticos como un promedio o desviaci√≥n est√°ndar.

### Ejericicio 2

Crea un objeto llamado `CarTab` empleando los datos `mtcars`, el cual son datos de ejemplo de la revista Motor Trend US de 1974, donde cada fila es un auto y sus diferentes atributos (variables). Luego, sobre el objeto `CarTab`, emplea los comandos `class()`, `str()`, `head()`, y `summary()`. Termina calculando el promedio de la variable `hp` usando la funci√≥n `mean()`.

::: callout-tip
## Escribe `CarTab` asign√°ndolo con `<-` y luego escribe `mtcars`. Para usar los comandos, escribe el comando respectivo y entre los par√©ntesis escribe el nombre de objeto `CarTab`. Para el comando `mean()` tendr√°s que especificar la columna con `$` del objeto.
:::

Para ser concisos, hoy aprendiste que puedes manejar diferentes tipos de datos en R:

-   Num√©ricos: N√∫meros enteros y decimales.
-   Caracteres: Cadenas de texto.
-   Factores: Datos categ√≥ricos ordenados o no ordenados.
-   Fechas: Informaci√≥n de tiempo en un formato de fecha, que tambi√©n puede incluir hora.
-   L√≥gicos: Valores de verdad (`TRUE` o `FALSE`).
-   Datos perdidos: Informaci√≥n faltante (`NA`) en un conjunto de datos.

## Soluciones de los Ejercicios

### Ejercicio 1

```{r}
edad <- c(40, 5, 16, 28, 32)
nombre <- c("Daniel", "Mariela", "Miguel", "Pablo", "Javiera")
misdatos <- data.frame(nombre, edad)
misdatos
```

### Ejercicio 2

::: callout-important
## Para citar este archivo Quarto, por favor, considera este formato: Montero, M. (2024). Metodolog√≠a Cuantitativa II 2024 \[Repositorio\]. GitHub. URL
:::
