rm(list=ls()); dev.off()
rm(list=ls()); dev.off()
getwd() # Verifica el directorio de trabajo actual
getwd() # Verifica el directorio de trabajo actual
# Cambia por tu directorio de trabajo al lugar donde se guardaron los datos
setwd("G:/Mi unidad/Teaching/Metodología Cuantitativa II 2024/Sesión 3")
getwd() # Verifica el directorio de trabajo actual
setwd("G:/Mi unidad/Teaching/Metodología Cuantitativa II 2024/Sesión 3") # Cambia esta línea de código por tu directorio de trabajo
if(!require(pacman)) install.packages("pacman")
pacman::p_load(haven,
ggplot2,
gmodels,
psych,
corrplot,
lmtest,
broom,
relaimpo,
visreg,
performance,
see,
patchwork,
knitr,
car)
pisa2009_chl <- read_sav("pisa2009_chl.sav")
class(pisa2009_chl)    # Verifica la clase del objeto 'pisa2009_chl'
head(pisa2009_chl)     # Muestra los primeros 6 casos de la base de datos
names(pisa2009_chl)    # Lista los nombres de las variables
dim(pisa2009_chl)      # Muestra el número de variables y casos
summary(pisa2009_chl)  # Proporciona un resumen estadístico para cada variable
str(pisa2009_chl)      # Muestra la estructura interna del data frame
pisa2009_chl$ses <- as.numeric(pisa2009_chl$ses)
summary(pisa2009_chl$ses)  # Resumen descriptivo de SES
sd(pisa2009_chl$ses, na.rm = TRUE)  # Desviación estándar de SES
var(pisa2009_chl$ses, na.rm = TRUE)  # Varianza de SES
describe(pisa2009_chl$ses)
summary(pisa2009_chl$math)  # Resumen descriptivo de math
sd(pisa2009_chl$math, na.rm = TRUE)  # Desviación estándar de math
var(pisa2009_chl$math, na.rm = TRUE)  # Varianza de math
describe(pisa2009_chl$math)
# Histograma de SES
ggplot(pisa2009_chl, aes(x = ses)) +
geom_histogram()
# Gráfico de Densidad de SES
ggplot(pisa2009_chl, aes(x = ses)) +
geom_density()
# Histograma y Densidad combinados
ggplot(pisa2009_chl, aes(x = ses)) +
geom_histogram(aes(y = ..density..)) +
geom_density()
# Histograma de Math
ggplot(pisa2009_chl, aes(x = math)) +
geom_histogram()
# Gráfico de Densidad de Math
ggplot(pisa2009_chl, aes(x = math)) +
geom_density()
# Histograma y Densidad combinados
ggplot(pisa2009_chl, aes(x = math)) +
geom_histogram(aes(y = ..density..)) +
geom_density()
m1 <- lm(math ~ ses, data = pisa2009_chl)
summary(m1)
ggplot(pisa2009_chl) +
aes(x = ses, y = math) +
geom_point(colour = "#0c4c8a") +
theme_minimal()
hist(m1$residuals, freq = FALSE)
plot(density(m1$residuals))
qqnorm(m1$residuals, main = 'Gráfico Cuantil-Cuantil')
qqline(m1$residuals)
shapiro.test(m1$residuals[0:5000])
bptest(math ~ ses, data = pisa2009_chl)
# Recodificación de la variable sexo
pisa2009_chl$female <- as.numeric(pisa2009_chl$sex)
pisa2009_chl$female[pisa2009_chl$female == "1"] <- 0
pisa2009_chl$female[pisa2009_chl$female == "2"] <- 1
m2 <- lm(math ~ ses + female + read + scie, data = pisa2009_chl)
summary(m2)
table(pisa2009_chl$female)
table(pisa2009_chl$sex)
class(pisa2009_chl$sex)
# Recodificación de la variable sexo
pisa2009_chl$female <- as.numeric(pisa2009_chl$sex)
pisa2009_chl$female[pisa2009_chl$female == 1] <- 0
pisa2009_chl$female[pisa2009_chl$female == 2] <- 1
m2 <- lm(math ~ ses + female + read + scie, data = pisa2009_chl)
summary(m2)
table(pisa2009_chl$sex)
# Recodificación de la variable sexo
pisa2009_chl$female <- as.numeric(pisa2009_chl$sex)
pisa2009_chl$female[pisa2009_chl$female == 0] <- 0
pisa2009_chl$female[pisa2009_chl$female == 1] <- 1
m2 <- lm(math ~ ses + female + read + scie, data = pisa2009_chl)
summary(m2)
data <- pisa2009_chl[, c("math", "ses", "read", "scie")]
correlaciones <- cor(data, use = "complete.obs")
# Visualizar la matriz de correlación usando un correlograma
corrplot(correlaciones, method = 'circle', type = 'lower', insig = 'blank',
addCoef.col = 'black', number.cex = 0.8, order = 'AOE', diag = FALSE)
kable(vif(m2), digits = 2)
check_model(m1)
anova(m1, m2)
calc.relimp(m2, type = c("lmg", "last", "first", "pratt"), rela = TRUE)
rm(list=ls()); dev.off()
?reshape2
??reshape2
getwd() # Verifica el directorio de trabajo actual
setwd("G:/Mi unidad/Teaching/Metodología Cuantitativa II 2024/Sesión 3") # Cambia esta línea de código por tu directorio de trabajo
if(!require(pacman)) install.packages("pacman")
pacman::p_load(tidyverse, # tidyverse es en realidad una colección de paquetes muy popular, que incluye ggplot2, dplyr, etc
corrplot,
GGally,
lmtest,
DescTools,
car,
reshape2,
tidymodels)
# Importar los datos de matrícula para 2021 y 2022
mat2021 <- read.csv(file = "20220719_Matrícula_Ed_Superior_2021_PUBL_MRUN.csv", header = TRUE, sep = ";")
# Importar los datos de matrícula para 2021 y 2022
mat2021 <- read.csv(file = "20230802_Matrícula_Ed_Superior_2021_PUBL_MRUN.csv", header = TRUE, sep = ";")
mat2022 <- read.csv(file = "20230802_Matrícula_Ed_Superior_2022_PUBL_MRUN.csv", header = TRUE, sep = ";")
# Selección de casos: Cohorte que ingresó en 2021
mat2021_1anio <- mat2021[which(mat2021$anio_ing_carr_ori == "2021"),]
mat2022_2anio <- mat2022[which(mat2022$anio_ing_carr_ori == "2021"),]
# Generación de variable dependiente: Indicador de Deserción
mat2021_1anio$deserta <- ifelse(mat2021_1anio$mrun %in% mat2022_2anio$mrun, "0", "1")
mat2021_1anio$deserta <- as.numeric(mat2021_1anio$deserta)
# Seleccionamos solo a estudiantes de pregrado
mat2021_1anio <- mat2021_1anio[which(mat2021_1anio$nivel_global == "Pregrado"),]
# Exploración de los datos
head(mat2021_1anio)
dim(mat2021_1anio)
str(mat2021_1anio)
# Recodificación de la variable género
mat2021_1anio$female <- as.numeric(mat2021_1anio$gen_alu)
mat2021_1anio$female[mat2021_1anio$female == "1"] <- 0
mat2021_1anio$female[mat2021_1anio$female == "2"] <- 1
# Cálculo de la edad al ingreso en la educación superior
mat2021_1anio$anio_nac <- as.numeric(str_sub(mat2021_1anio$fec_nac_alu, 1, 4))
mat2021_1anio$anio_ing_carr_ori <- as.numeric(mat2021_1anio$anio_ing_carr_ori)
mat2021_1anio$edad_alu <- mat2021_1anio$anio_ing_carr_ori - mat2021_1anio$anio_nac
# Filtramos datos erróneos de edad
summary(mat2021_1anio$edad_alu)
mat2021_1anio <- mat2021_1anio[!(mat2021_1anio$edad_alu == 121),]
summary(mat2021_1anio$edad_alu)
ggplot(data = mat2021_1anio, aes(deserta, fill = deserta)) +
geom_bar(position = "dodge") +
ggtitle("Deserción") +
ylab("Cantidad") +
scale_fill_manual(values = c("#87ceeb", "#ffd700")) +
theme_bw() +
theme(plot.title = element_text(hjust = 0.5)) +
theme(legend.position = 'top')
m2 <- glm(deserta ~ female + edad_alu, family = binomial(logit), data = mat2021_1anio)
summary(m2)
logodds <- m2$linear.predictors
boxTidwell(logodds ~ mat2021_1anio$edad_alu)
# Ajustamos un modelo con más variables independientes
mat2021_1anio$valor_arancel <- as.numeric(mat2021_1anio$valor_arancel)
m3 <- glm(deserta ~ female + edad_alu + dur_total_carr + valor_arancel, family = binomial(logit), data = mat2021_1anio)
summary(m3)
# Correlación entre variables independientes continuas
cormat <- round(cor(mat2021_1anio[, c("edad_alu", "dur_total_carr", "valor_arancel")]), 2)
melted_cormat <- melt(cormat)
# Visualización de la matriz de correlación
ggplot(data = melted_cormat, aes(x = Var1, y = Var2, fill = value)) +
geom_tile()
# Calcular VIF
kable(vif(m3), digits = 2)
?kable
pacman::p_load(tidyverse, # tidyverse es en realidad una colección de paquetes muy popular, que incluye ggplot2, dplyr, etc
corrplot,
GGally,
lmtest,
DescTools,
car,
reshape2,
tidymodels,
knitr)
# Calcular VIF
kable(vif(m3), digits = 2)
summary(m3)
PseudoR2(m3)
PseudoR2(m3)
m3$coefficients # coeficientes en log-odds
exp(m3$coefficients) # coeficientes en odd ratios
exp(confint(m3))
# Removamos los data frames que no utilizaremos para liberar espacio de memoria RAM
rm(mat2021, mat2022)
# Removamos los data frames que no utilizaremos para liberar espacio de memoria RAM
rm(mat2021, mat2022, mat2022_2anio)
# Ajustamos un modelo con más variables independientes
mat2021_1anio$valor_arancel <- as.numeric(mat2021_1anio$valor_arancel)
m3 <- glm(deserta ~ female + edad_alu + dur_total_carr + valor_arancel, family = binomial(logit), data = mat2021_1anio)
summary(m3)
# Correlación entre variables independientes continuas
cormat <- round(cor(mat2021_1anio[, c("edad_alu", "dur_total_carr", "valor_arancel")]), 2)
melted_cormat <- melt(cormat)
# Visualización de la matriz de correlación
ggplot(data = melted_cormat, aes(x = Var1, y = Var2, fill = value)) +
geom_tile()
# Calcular VIF
kable(vif(m3), digits = 2)
summary(m3)
PseudoR2(m3)
m3$coefficients # coeficientes en log-odds
exp(m3$coefficients) # coeficientes en odd ratios
exp(confint(m3))
# Cálculo de la chi-cuadrado del modelo
modelChi <- m3$null.deviance - m3$deviance
chidf <- m3$df.null - m3$df.residual
chisq.prob <- 1 - pchisq(modelChi, chidf)
chisq.prob  # Significancia del modelo
# Probabilidades estimadas
mat2021_1anio$Probabilidades_estimadas <- m3$fitted.values
# Probabilidades estimadas
mat2021_1anio$Probabilidades_estimadas <- m3$fitted.values
# Ajustamos un modelo con más variables independientes
mat2021_1anio$valor_arancel <- as.numeric(mat2021_1anio$valor_arancel)
m3 <- glm(deserta ~ female + edad_alu + dur_total_carr + valor_arancel, family = binomial(logit), data = mat2021_1anio)
summary(m3)
# Correlación entre variables independientes continuas
cormat <- round(cor(mat2021_1anio[, c("edad_alu", "dur_total_carr", "valor_arancel")]), 2)
melted_cormat <- melt(cormat)
# Visualización de la matriz de correlación
ggplot(data = melted_cormat, aes(x = Var1, y = Var2, fill = value)) +
geom_tile()
# Calcular VIF
kable(vif(m3), digits = 2)
# Probabilidades estimadas
mat2021_1anio$Probabilidades_estimadas <- m3$fitted.values
# Filtrar para eliminar NA's presentes en predictores del modelo 3
mat2021_1anio2 <- filter(mat2021_1anio, !is.na(female) & !is.na(edad_alu) & !is.na(dur_total_carr) & !is.na(valor_arancel))
rm(mat2021_1anio2)
# Filtrar para eliminar NA's presentes en predictores del modelo 3
mat2021_1anio <- filter(mat2021_1anio, !is.na(female) & !is.na(edad_alu) & !is.na(dur_total_carr) & !is.na(valor_arancel))
# Probabilidades estimadas
mat2021_1anio$Probabilidades_estimadas <- m3$fitted.values
# Mostrar algunas probabilidades estimadas
kable(mat2021_1anio[c(1:10), c("deserta", "female", "edad_alu", "dur_total_carr", "valor_arancel", "Probabilidades_estimadas")], digits = 2)
probabilities = m3 %>% predict(mat2021_1anio, type = "response")
head(probabilities)
predicted = ifelse(probabilities > 0.5, 1, 0)
mean(predicted == mat2021_1anio$deserta)
m3_augmented <- augment(m3)
# Relación entre edad al ingreso y deserción
ggplot(m3_augmented, aes(edad_alu, deserta)) +
geom_point(lwd = 3, alpha = .5) +
stat_smooth(method = "glm", se = TRUE, method.args = list(family = binomial), color = "royalblue") +
theme_bw(base_size = 22)
# Relación entre duración total de la carrera y deserción
ggplot(m3_augmented, aes(dur_total_carr, deserta)) +
geom_point(lwd = 3, alpha = .5) +
stat_smooth(method = "glm", se = TRUE, method.args = list(family = binomial), color = "royalblue") +
theme_bw(base_size = 22)
# Relación entre valor del arancel y deserción
ggplot(m3_augmented, aes(valor_arancel, deserta)) +
geom_point(lwd = 3, alpha = .5) +
stat_smooth(method = "glm", se = TRUE, method.args = list(family = binomial), color = "royalblue") +
theme_bw(base_size = 22)
anova(m2, m3)
m2 <- glm(deserta ~ female + edad_alu, family = binomial(logit), data = mat2021_1anio)
summary(m2)
anova(m2, m3)
library(haven)
library(ggplot2)
library(gmodels)
library(psych)
library(pastecs)
library(effsize)
getwd()  # Verifica el directorio de trabajo actual
# Cambia el directorio de trabajo al lugar donde se guardaron los datos
setwd("G:/Mi unidad/Teaching/Metodología Cuantitativa II 2024/Sesión 2")
getwd()  # Confirma que el directorio de trabajo ha cambiado
pisa2009_chl <- read_sav("pisa2009_chl.sav")
View(pisa2009_chl)  # Visualiza la base de datos en una nueva ventana
class(pisa2009_chl)    # Verifica la clase del objeto 'pisa2009_chl'
head(pisa2009_chl)     # Muestra los primeros 6 casos de la base de datos
names(pisa2009_chl)    # Lista los nombres de las variables
dim(pisa2009_chl)      # Muestra el número de variables y casos
summary(pisa2009_chl)  # Proporciona un resumen estadístico para cada variable
str(pisa2009_chl)      # Muestra la estructura interna del data frame
# Tabla de contingencia para una variable categórica
table(pisa2009_chl$sex)  # Distribución de género
table(pisa2009_chl$type) # Distribución por tipo de establecimiento
# Tabla de contingencia para dos variables categóricas
table(pisa2009_chl$type, pisa2009_chl$sex)  # Distribución conjunta de género y tipo de establecimiento
# Tabla de porcentajes para variables categóricas por grupo de interés
# "margin = 2" entrega las proporciones de la distribución condicional de la variable 1 según la variable 2
prop.table(table(pisa2009_chl$type, pisa2009_chl$sex), margin = 2)
# Gráfico de Barras para la variable 'sex'
plot <- as.data.frame(table(pisa2009_chl$sex))
ggplot(plot, aes(x = Var1, y = Freq)) +
geom_bar(stat = "identity")
# Gráfico de Barras para la variable 'type'
plot <- as.data.frame(table(pisa2009_chl$type))
ggplot(plot, aes(x = Var1, y = Freq)) +
geom_bar(stat = "identity")
# Gráfico Circular para la variable 'sex'
plot <- as.data.frame(table(pisa2009_chl$sex))
ggplot(plot, aes(x = "", y = Freq, fill = Var1)) +
geom_bar(stat = "identity", color = "white") +
coord_polar("y", start = 0) +
theme_void()
# Gráfico Circular para la variable 'type'
plot <- as.data.frame(table(pisa2009_chl$type))
ggplot(plot, aes(x = "", y = Freq, fill = Var1)) +
geom_bar(stat = "identity", color = "white") +
coord_polar("y", start = 0) +
theme_void()
# Generación de la tabla de contingencia con la función CrossTable
tabla <- CrossTable(pisa2009_chl$type, pisa2009_chl$sex, prop.chisq = FALSE)
# Guardamos las proporciones por columna
propcol <- tabla$prop.col
# Gráfico de Barras Condicional: Visualización de las proporciones condicionales
barplot(propcol, beside = TRUE, col = rainbow(3), ylim = c(0, 1))
legend('topright', c("Public", "Private government-dependent", "Private independent"), pch = 15, col = rainbow(3), cex = 0.7)
CrossTable(pisa2009_chl$type, pisa2009_chl$sex, prop.chisq = FALSE, chisq = TRUE, expected = TRUE, sresid = TRUE, format = "SPSS")
pisa2009_chl$ses <- as.numeric(pisa2009_chl$ses)  # Convierte estatus socioeconómico a numérico
pisa2009_chl$sex <- as.numeric(pisa2009_chl$sex)  # Convierte sexo a numérico
# Estadísticos básicos
summary(pisa2009_chl$ses)  # Resumen descriptivo de estatus socioeconómico
sd(pisa2009_chl$ses, na.rm = TRUE)  # Desviación estándar de estatus socioeconómico
var(pisa2009_chl$ses, na.rm = TRUE)  # Varianza de estatus socioeconómico
# Estadísticos descriptivos más detallados utilizando el paquete 'psych'
describe(pisa2009_chl$ses)
by(pisa2009_chl$ses, pisa2009_chl$sex, summary)
# Histograma de estatus socioeconómico
ggplot(pisa2009_chl, aes(x = ses)) +
geom_histogram()
# Gráfico de Densidad de estatus socioeconómico
ggplot(pisa2009_chl, aes(x = ses)) +
geom_density()
# Histograma y Densidad combinados
ggplot(pisa2009_chl, aes(x = ses)) +
geom_histogram(aes(y = ..density..)) +
geom_density()
# Histograma de la variable 'math' como comparación
ggplot(pisa2009_chl, aes(x = math)) +
geom_histogram()
# Gráfico cuartil-cuartil (Q-Q plot) para estatus socioeconómico
qqnorm(pisa2009_chl$ses, main = 'Gráfico Cuartil-Cuartil')
qqline(pisa2009_chl$ses)
# Prueba de normalidad Shapiro-Wilk para los primeros 5000 casos de estatus socioeconómico
shapiro.test(pisa2009_chl$ses[0:5000])
prueba_u <- wilcox.test(pisa2009_chl$ses, pisa2009_chl$sex, paired = FALSE)
prueba_u
by(pisa2009_chl$ses, pisa2009_chl$type, summary)
kruskal.test(pisa2009_chl$ses ~ pisa2009_chl$type)
# Visualización mediante un diagrama de dispersión (scatter plot)
pairs(pisa2009_chl$ses ~ pisa2009_chl$math)  # Muestra un gráfico de correlación básico
# Gráfico más detallado utilizando ggplot2
ggplot(pisa2009_chl) +
aes(x = ses, y = math) +
geom_point(colour = "#0c4c8a") +
theme_minimal()
cor.test(pisa2009_chl$ses, pisa2009_chl$math, method = "spearman", exact = FALSE)
summary(pisa2009_chl$math)
sd(pisa2009_chl$math)
var(pisa2009_chl$math)
describe(pisa2009_chl$math)
# Histograma
ggplot(pisa2009_chl, aes(x=math)) +
geom_histogram()
# Gráfico Cuartil-Cuartil (Q-Q plot):
qqnorm(pisa2009_chl$math, main='Gráfico Cuartil-Cuartil')
qqline(pisa2009_chl$math)
# Prueba de Shapiro-Wilk
shapiro.test(pisa2009_chl$math[0:5000])
ind.t.test <- t.test(pisa2009_chl$math ~ pisa2009_chl$sex, var.equal = T)
ind.t.test
d_cohen <- cohen.d(pisa2009_chl$math ~ pisa2009_chl$sex)
d_cohen
boxplot(pisa2009_chl$math ~ pisa2009_chl$type,
xlab = "Dependencia", ylab = "Puntaje Pisa Mat")
res_an <- aov(pisa2009_chl$math ~ pisa2009_chl$type)
summary(res_an)
pairs(pisa2009_chl$math ~ pisa2009_chl$read)
# Gráfico más detallado utilizando ggplot2
ggplot(pisa2009_chl) +
aes(x = math, y = read) +
geom_point(colour = "#0c4c8a") +
theme_minimal()
r <- cor.test(pisa2009_chl$math, pisa2009_chl$read, method = "pearson")
r
r2 <- r$estimate * r$estimate
r2
round(cor(pisa2009_chl[, 7:9]), digits = 2)  # Redondea a dos decimales
